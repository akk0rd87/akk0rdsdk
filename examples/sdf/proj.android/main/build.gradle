apply plugin: 'com.android.model.native'

def akkord_sdk_path = System.getenv('AKKORD_SDK_HOME')

model {
     repositories {
        libs(PrebuiltLibraries) {
            SDL2 {
                headers.srcDir "${akkord_sdk_path}/libraries/SDL/SDL/include"
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${akkord_sdk_path}/libraries/SDL/android/lib/${targetPlatform.getName()}/libSDL2.so")
                }               
            }        

            SDL2_image {
                headers.srcDir "${akkord_sdk_path}/libraries/SDL_image/SDL_image"
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${akkord_sdk_path}/libraries/SDL_image/android/lib/${targetPlatform.getName()}/libSDL2_image.so")
                }                
            }             
        }
    }

   android {
        compileSdkVersion = rootProject.ext.compileSdkVersion
        buildToolsVersion = rootProject.ext.buildToolsVersion

        defaultConfig {

        }
        ndk {
            moduleName = 'main'
            platformVersion = "14"
            
            ldLibs.addAll(["android"])
            
            cppFlags.addAll(["-std=c++11"])
            
            cppFlags.addAll(["-I" + file("${akkord_sdk_path}/libraries/SDL/SDL/include/").absolutePath])
            CFlags.addAll(["-I" + file("${akkord_sdk_path}/libraries/SDL/SDL/include/").absolutePath])

            cppFlags.addAll(["-I" + file("${akkord_sdk_path}/libraries/SDL_image/SDL_image").absolutePath])
            CFlags.addAll(["-I" + file("${akkord_sdk_path}/libraries/SDL_image/SDL_image").absolutePath])
            
            cppFlags.addAll(["-I" + file("${akkord_sdk_path}/framework/").absolutePath])            
            
            stl "c++_static"
        }

        sources {
            main {
                jni {
                    dependencies {
                        library 'SDL2'       linkage 'shared'                        
                        library 'SDL2_image' linkage 'shared'
                    }
                    source {
			            srcDirs "../../../common/src/"
                        srcDirs "../../srclocal/"
                        //srcDirs "${akkord_sdk_path}/framework/platforms/android/"
                        srcDirs "${akkord_sdk_path}/framework/"                        
                    }
                }
            }
        }

    }
}

// This is just copy out the header file and built lib into distribution
// directory for clint application to use; it is a small overhead of this sample:
//    both lib and app are put inside one project space [save maintenance time]
task(distributeLib, type : Copy) {
    // trigger build library
    dependsOn assemble
    into '../main/'
    from('build/outputs/native/release/lib') {
        into 'lib/'
    }
}
